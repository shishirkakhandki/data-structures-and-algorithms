#include<bits/stdc++.h>
using namespace std;


    bool isSafe(int i, int j, int imax, int jmax){
        
        if(i<0 or i>=imax or j>=jmax or j<0)return false;
        else return true;
        
    }
    
    void dfs(vector<vector<char>>& grid, int i, int j){
        
            if(!isSafe(i, j, grid.size(), grid[0].size()))return;
        
            if(grid[i][j]=='0')return;
            
            
            if(grid[i][j]=='1'){
            grid[i][j] = 0;
        
       
            dfs(grid, i+1, j);
        
        
            dfs(grid, i, j+1);
        
       
            dfs(grid, i, j-1);
        
       
            dfs(grid, i-1, j);
        
        
            dfs(grid, i+1, j+1);
        
        
             dfs(grid, i+1, j-1);
        
        
             dfs(grid, i-1, j-1);
        
        
             dfs(grid, i-1, j+1);
            }
        
           return;
        
        
    }
    
    int numIslands(vector<vector<char>>& grid) 
    {
      
       int count = 0; 
       
       for(int i = 0; i<grid.size(); i++){
           for(int j = 0; j<grid[0].size(); j++){
               
               if(grid[i][j]=='1'){
                   dfs(grid, i, j);
                   count++;
               }
               
           }
       }
       
       return count;
        
    }

int main(){

	int n, m;
	cin >> n >> m;
	vector<vector<char>>grid(n, vector<char>(m, '#'));
	for(int i = 0; i < n; i++){
		for(int j = 0; j < m; j++){
			cin >> grid[i][j];
		}
	}
	cout<<numIslands(grid);

	return 0;
}  
